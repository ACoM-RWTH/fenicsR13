image: docker:stable
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  APP_DIRECTORY: fenicsR13
  DOCS_DIRECTORY: ${APP_DIRECTORY}/docs
services:
- docker:dind # docker in docker
stages:
- build
- test
- deploy

# **************************************************************************** #
# build
# **************************************************************************** #

build:
  stage: build
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
  - docker pull $CI_REGISTRY_IMAGE:latest || true
  - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
  # - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA # no need
  - docker push $CI_REGISTRY_IMAGE:latest
  when: manual # skips 15min, but has to be done manually if Dockerfile changes

# **************************************************************************** #
# test
# **************************************************************************** #

.test: # dot means "hidden", acts as base class
  stage: test
  image:
    name: $CI_REGISTRY_IMAGE:latest # use prebuilt image in Gitlab's registry
    entrypoint: [""] # == Repo. Has to be done if Dockerfile has own entrypoint
  artifacts:
    paths:
    - ${APP_DIRECTORY}/htmlcov
    expire_in: 1 week

test:convergence:heat:
  extends: .test
  script:
  - cd ${APP_DIRECTORY}
  - pytest --cov= --cov-report=term --cov-report=html

# **************************************************************************** #
# build
# **************************************************************************** #

pages:
  stage: deploy
  image:
    name: $CI_REGISTRY_IMAGE:latest
    entrypoint: [""]
  script:
  - cd ${DOCS_DIRECTORY}
  - sphinx-apidoc -o source/ ../src
  - make html
  - mv _build/html/ ${CI_PROJECT_DIR}/public/
  artifacts:
    paths:
    - public